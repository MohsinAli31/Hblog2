{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../shared.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\n\nfunction EditpostComponent_div_5_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r2.ImageURL, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction EditpostComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-card-content\");\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"mat-form-field\", 5);\n    i0.ɵɵelementStart(5, \"mat-card-title\");\n    i0.ɵɵtext(6, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4);\n    i0.ɵɵelementStart(9, \"div\", 7);\n    i0.ɵɵelementStart(10, \"label\");\n    i0.ɵɵtext(11, \"Upload File:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, EditpostComponent_div_5_div_12_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementStart(13, \"input\", 9);\n    i0.ɵɵlistener(\"change\", function EditpostComponent_div_5_Template_input_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onFileSelected($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 3);\n    i0.ɵɵelementStart(15, \"div\", 10);\n    i0.ɵɵelementStart(16, \"mat-form-field\", 5);\n    i0.ɵɵelementStart(17, \"mat-card-title\");\n    i0.ɵɵtext(18, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(19, \"textarea\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ImageURL && ctx_r0.ImageURL !== \"\");\n  }\n}\n\nexport let EditpostComponent = /*#__PURE__*/(() => {\n  class EditpostComponent {\n    constructor(route, fb, router, service, http) {\n      this.route = route;\n      this.fb = fb;\n      this.router = router;\n      this.service = service;\n      this.http = http;\n      this.postList = [];\n      this.list = [];\n      this.title = '';\n    }\n\n    apicALl() {\n      this.service.getPostOnIdSelect(this.user.id).subscribe(res => {\n        console.log('response api call function', this.user.id);\n        this.postList = [];\n        this.postList.push(res);\n        console.log('list from res from edit comp postList', this.postList);\n      });\n    }\n\n    onFileSelected(event) {\n      var _a, _b, _c;\n\n      this.selectedFile = event.target.files[0];\n      (_a = this.profileForm.get('picture')) === null || _a === void 0 ? void 0 : _a.setValue(event.target.files[0]);\n      console.log('file event is ....', this.selectedFile); //////////////////////\n\n      const file = event.target.files[0];\n      (_c = (_b = this.profileForm) === null || _b === void 0 ? void 0 : _b.get('img')) === null || _c === void 0 ? void 0 : _c.updateValueAndValidity();\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.ImageURL = reader.result;\n      };\n\n      reader.readAsDataURL(file); ///////////////\n    }\n\n    ngOnInit() {\n      this.profileForm = this.fb.group({\n        title: [, [Validators.minLength(4)]],\n        description: [''],\n        picture: [],\n        categoryId: []\n      });\n      this.user = {\n        id: this.route.snapshot.params['id']\n      };\n      this.route.params.subscribe(params => {\n        this.user.id = params['id'];\n        this.user = {\n          id: params['id']\n        };\n      });\n      this.service.getPostOnIdSelect(this.user.id).subscribe(res => {\n        this.postList = [];\n        this.postList.push(res);\n        console.log('response api call function', this.postList);\n        this.ImageURL = this.postList[0].picture.replace('images', 'http://localhost:8000');\n        console.log('old image is', this.ImageURL);\n        this.profileForm = this.fb.group({\n          title: [this.postList[0].title, [Validators.minLength(4)]],\n          description: [this.postList[0].description],\n          picture: ['http://localhost:8000/1644819466379--IMG_20220110_165915_565.jpg'] // picture: [\n          //   this.postList[0].picture.replace('images', 'http://localhost:8000'),\n          // ],\n          // categoryId: [this.postList[0].categoryId],\n\n        });\n        console.log('list from res from edit comp postList', this.postList);\n        console.log('Profile form data after selecting image is:', this.profileForm);\n      }); // console.log('title ', console.log('title here: ', this.postList[0].title));\n    }\n\n    saveForm() {\n      console.log('old image', this.ImageURL);\n      console.log('profile forum image', this.profileForm);\n      const formData = new FormData();\n      formData.append('picture', this.profileForm.get('picture').value);\n      formData.append('title', this.profileForm.get('title').value);\n      formData.append('description', this.profileForm.get('description').value); // formData.append(this.selectedFile, this.profileForm.get('picture')!.value);\n\n      console.log('form data is appending ', formData);\n      this.service.upDatePost(formData, this.postList[0].id); // this.service.upDatePost(this.profileForm.value, this.postList[0].id);\n      // console.log('form data is ', formData);\n      // this.service.createPosts(this.profileForm.value);\n    }\n\n  }\n\n  EditpostComponent.ɵfac = function EditpostComponent_Factory(t) {\n    return new (t || EditpostComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.SharedService), i0.ɵɵdirectiveInject(i4.HttpClient));\n  };\n\n  EditpostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditpostComponent,\n    selectors: [[\"app-editpost\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"form-container\", 3, \"formGroup\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"full-width\"], [\"formControlName\", \"title\", \"matInput\", \"\"], [1, \"form-group\"], [4, \"ngIf\"], [\"type\", \"file\", \"accept\", \"image/*\", \"formControlName\", \"picture\", \"name\", \"picture\", 1, \"form-control\", 3, \"change\"], [1, \"col-sm-6\"], [\"formControlName\", \"description\", \"matInput\", \"\"], [\"width\", \"250px\", \"height\", \"100px\", \"alt\", \"url\\n               error\", 2, \"display\", \"flex\", 3, \"src\"]],\n    template: function EditpostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\");\n        i0.ɵɵelementStart(2, \"mat-card-header\");\n        i0.ɵɵelementStart(3, \"mat-card-title\");\n        i0.ɵɵtext(4, \"POST UPDATE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, EditpostComponent_div_5_Template, 20, 1, \"div\", 1);\n        i0.ɵɵelementStart(6, \"mat-card-actions\");\n        i0.ɵɵelementStart(7, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function EditpostComponent_Template_button_click_7_listener() {\n          return ctx.saveForm();\n        });\n        i0.ɵɵtext(8, \" Save \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.profileForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.postList);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i5.MatCard, i5.MatCardHeader, i5.MatCardTitle, i6.NgForOf, i5.MatCardContent, i7.MatFormField, i2.DefaultValueAccessor, i8.MatInput, i2.NgControlStatus, i2.FormControlName, i6.NgIf, i5.MatCardActions, i9.MatButton],\n    styles: [\"\"]\n  });\n  return EditpostComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}